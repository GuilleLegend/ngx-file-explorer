{"version":3,"file":"ngx-explorer.js","sources":["../../../projects/ngx-explorer/src/lib/shared/types.ts","../../../projects/ngx-explorer/src/lib/injection-tokens/tokens.ts","../../../projects/ngx-explorer/src/lib/shared/utils.ts","../../../projects/ngx-explorer/src/lib/services/data.service.ts","../../../projects/ngx-explorer/src/lib/services/explorer.service.ts","../../../projects/ngx-explorer/src/lib/services/helper.service.ts","../../../projects/ngx-explorer/src/lib/components/base-view/base-view.directive.ts","../../../projects/ngx-explorer/src/lib/components/icons/icons.component.ts","../../../projects/ngx-explorer/src/lib/components/explorer/explorer.component.ts","../../../projects/ngx-explorer/src/lib/components/menu-bar/menu-bar.component.ts","../../../projects/ngx-explorer/src/lib/services/config.provider.ts","../../../projects/ngx-explorer/src/lib/components/breadcrumbs/breadcrumbs.component.ts","../../../projects/ngx-explorer/src/lib/components/list/list.component.ts","../../../projects/ngx-explorer/src/lib/components/second-menu-bar/second-menu-bar.component.ts","../../../projects/ngx-explorer/src/lib/components/view-switcher/view-switcher.component.ts","../../../projects/ngx-explorer/src/lib/components/tree/tree.component.ts","../../../projects/ngx-explorer/src/lib/components/filter/filter.component.ts","../../../projects/ngx-explorer/src/lib/directives/drag-drop.directive.ts","../../../projects/ngx-explorer/src/lib/shared/default-config.ts","../../../projects/ngx-explorer/src/lib/ngx-explorer.module.ts","../../../projects/ngx-explorer/src/public-api.ts","../../../projects/ngx-explorer/src/ngx-explorer.ts"],"sourcesContent":["import { Observable } from 'rxjs';\n\nexport type NodeContent<T> = { leafs: T[], nodes: T[] };\n\nexport interface Dictionary<T> {\n    [Key: string]: T;\n}\n\nexport interface INode {\n    id: number;\n    parentId: number;\n    data: any;\n    isLeaf: boolean;\n    children: INode[];\n}\n\nexport interface IDataService<T> {\n    getNodeChildren(node: T): Observable<NodeContent<T>>;\n    createNode(parentNode: T, name: string): Observable<any>;\n    renameNode(node: T, newName: string): Observable<any>;\n    renameLeaf(node: T, newName: string): Observable<any>;\n    deleteNodes(nodes: T[]): Observable<any>;\n    deleteLeafs(nodes: T[]): Observable<any>;\n    uploadFiles(node: T, files: File[]): Observable<any>;\n    download(node: T): Observable<any>;\n}\n\nexport interface IHelperService {\n    getName<T>(data: T): string;\n}\n\nexport enum AvialableView {\n    List = 'List',\n    Icon = 'Icon',\n}\n\nexport interface NgeExplorerConfig {\n    homeNodeName: string;\n}\n","import { InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AvialableView } from '../shared/types';\n\nexport const CURRENT_VIEW = new InjectionToken<BehaviorSubject<AvialableView>>('CURRENT_VIEW', {\n    providedIn: 'root',\n    factory: () => new BehaviorSubject(AvialableView.Icon),\n});\n\nexport const FILTER_STRING = new InjectionToken<BehaviorSubject<string>>('FILTER_STRING', {\n    providedIn: 'root',\n    factory: () => new BehaviorSubject(''),\n});\n","import { INode, Dictionary } from './types';\n\nexport class Utils {\n\n    private static id = 0;\n\n    static createNode(parentId = 0, isLeaf = false, data?: any): INode {\n        const id = ++this.id;\n        return {\n            id,\n            parentId,\n            data,\n            isLeaf,\n            children: []\n        };\n    }\n\n    static buildBreadcrumbs(flatPointers: Dictionary<INode>, node: INode) {\n        const pieces = [] as INode[];\n        let currentNode = node;\n        while (true) {\n            pieces.unshift(currentNode);\n            if (currentNode.parentId) {\n                currentNode = flatPointers[currentNode.parentId];\n            } else {\n                break;\n            }\n        }\n        return pieces;\n    }\n\n    static compareObjects(a: any, b: any) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { IDataService } from '../shared/types';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport abstract class DataService implements IDataService<any> {\n    abstract getNodeChildren(node: any);\n    abstract createNode(parentNode: any, name: any);\n    abstract renameNode(node: any, newName: string);\n    abstract renameLeaf(node: any, newName: string);\n    abstract deleteNodes(nodes: any[]);\n    abstract deleteLeafs(nodes: any[]);\n    abstract uploadFiles(node: any, files: File[]);\n    abstract download(node: any); // TODO multple download. should be configurable in settings\n    // move(from to) // TODO: on/off in settings\n    // copyPaste(from to) // TODO: on/off in settings\n    // cutPaste(from to) // TODO: on/off in settings\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, forkJoin, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { INode, Dictionary, NodeContent } from '../shared/types';\nimport { Utils } from '../shared/utils';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExplorerService {\n    private internalTree = Utils.createNode();\n    private flatPointers: Dictionary<INode> = { [this.internalTree.id]: this.internalTree };\n\n    private readonly selectedNodes$ = new BehaviorSubject<INode[]>([]);\n    private readonly openedNode$ = new BehaviorSubject<INode>(undefined);\n    private readonly breadcrumbs$ = new BehaviorSubject<INode[]>([]);\n    private readonly tree$ = new BehaviorSubject<INode>(this.internalTree);\n\n    public readonly selectedNodes = this.selectedNodes$.asObservable();\n    public readonly openedNode = this.openedNode$.asObservable();\n    public readonly breadcrumbs = this.breadcrumbs$.asObservable();\n    public readonly tree = this.tree$.asObservable();\n\n    constructor(private dataService: DataService) {\n        this.openNode(this.internalTree.id);\n    }\n\n    public selectNodes(nodes: INode[]) {\n        this.selectedNodes$.next(nodes);\n    }\n\n    public openNode(id: number) {\n        this.getNodeChildren(id).subscribe(() => {\n            const parent = this.flatPointers[id];\n            this.openedNode$.next(parent);\n            const breadcrumbs = Utils.buildBreadcrumbs(this.flatPointers, parent);\n            this.breadcrumbs$.next(breadcrumbs);\n            this.selectedNodes$.next([]);\n        });\n    }\n\n    public expandNode(id: number) {\n        this.getNodeChildren(id).subscribe();\n    }\n\n    public createNode(name: string) {\n        const parent = this.openedNode$.value;\n        this.dataService.createNode(parent.data, name).subscribe(() => {\n            this.refresh();\n        });\n    }\n\n    public refresh() {\n        this.openNode(this.openedNode$.value.id);\n    }\n\n    public rename(name: string) {\n        const nodes = this.selectedNodes$.value;\n        if (nodes.length > 1) {\n            throw new Error('Multiple selection rename not supported');\n        }\n        if (nodes.length === 0) {\n            throw new Error('Nothing selected to rename');\n        }\n\n        const node = nodes[0];\n        if (node.isLeaf) {\n            this.dataService.renameLeaf(node.data, name).subscribe(() => {\n                this.refresh();\n            });\n        } else {\n            this.dataService.renameNode(node.data, name).subscribe(() => {\n                this.refresh();\n            });\n        }\n    }\n\n    public remove() {\n        const selection = this.selectedNodes$.value;\n        if (selection.length === 0) {\n            throw new Error('Nothing selected to remove');\n        }\n\n        const targets = selection.map(node => this.flatPointers[node.id]);\n        const nodes = targets.filter(t => !t.isLeaf).map(data => data.data);\n        const leafs = targets.filter(t => t.isLeaf).map(data => data.data);\n\n        const sub1 = nodes.length ? this.dataService.deleteNodes(nodes) : of([]);\n        const sub2 = leafs.length ? this.dataService.deleteLeafs(leafs) : of([]);\n\n        forkJoin([sub1, sub2]).subscribe(() => {\n            this.refresh();\n        });\n    }\n\n    public upload(files: File[]) {\n        const node = this.openedNode$.value;\n        this.dataService.uploadFiles(node.data, files).subscribe(() => {\n            this.refresh();\n        });\n    }\n\n    public download() {\n        const target = this.selectedNodes$.value[0];\n        this.dataService.download(target.data).subscribe(() => {\n            this.refresh();\n        });\n    }\n\n    private getNodeChildren(id: number) {\n        const parent = this.flatPointers[id];\n        if (parent.isLeaf) {\n            throw new Error('Cannot open leaf node');\n        }\n\n        return this.dataService\n            .getNodeChildren(parent.data)\n            .pipe(tap(({ leafs, nodes }: NodeContent<any>) => {\n                const newNodes = nodes.map(data => Utils.createNode(id, false, data));\n                const newLeafs = leafs.map(data => Utils.createNode(id, true, data));\n                const newChildren = newNodes.concat(newLeafs);\n                const added = newChildren.filter(c => !parent.children.find(o => Utils.compareObjects(o.data, c.data)));\n                const removed = parent.children.filter(o => !newChildren.find(c => Utils.compareObjects(o.data, c.data)));\n\n                removed.forEach(c => {\n                    const index = parent.children.findIndex(o => o.id === c.id);\n                    parent.children.splice(index, 1);\n                    delete this.flatPointers[c.id];\n                });\n\n                added.forEach(c => {\n                    parent.children.push(c);\n                    this.flatPointers[c.id] = c;\n                });\n\n                parent.children.sort((a, b) => a.data.name.localeCompare(b.data.name));\n                const nodeChildren = parent.children.filter(c => !c.isLeaf);\n                const leafChildren = parent.children.filter(c => c.isLeaf);\n                parent.children = nodeChildren.concat(leafChildren);\n\n                this.tree$.next(this.internalTree);\n            }));\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IHelperService } from '../shared/types';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HelperService implements IHelperService {\n\n    getName(data: any): string {\n        return data?.name;\n    }\n}\n","import { Directive, Inject, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { INode } from '../../shared/types';\nimport { FILTER_STRING } from '../../injection-tokens/tokens';\nimport { ExplorerService } from '../../services/explorer.service';\nimport { HelperService } from '../../services/helper.service';\n\n@Directive()\nexport class BaseView implements OnDestroy {\n    public selection: INode[] = [];\n    public items: INode[] = [];\n    public dragging = false;\n    protected subs = new Subscription();\n\n    constructor(protected explorerService: ExplorerService, protected helperService: HelperService, @Inject(FILTER_STRING) private filter: BehaviorSubject<string>) {\n        this.subs.add(this.explorerService.openedNode.subscribe(nodes => {\n            this.items = nodes ? nodes.children : [];\n        }));\n\n        this.subs.add(this.explorerService.selectedNodes.subscribe(nodes => {\n            this.selection = nodes ? nodes : [];\n        }));\n    }\n\n    get filteredItems(): INode[] {\n        const filter = this.filter.value;\n        if (!filter) {\n            return this.items;\n        }\n        return this.items.filter(i => this.helperService.getName(i.data).toLowerCase().includes(filter.toLowerCase()));\n    }\n\n    getDisplayName(data) {\n        return this.helperService.getName(data);\n    }\n\n    select(event: MouseEvent, item: INode) {\n        const selectedIndex = this.selection.findIndex(i => i === item);\n        const alreadySelected = selectedIndex !== -1;\n        const metaKeyPressed = event.metaKey || event.ctrlKey || event.shiftKey;\n\n        if (alreadySelected && metaKeyPressed) {\n            this.selection.splice(selectedIndex, 1);\n        } else {\n            if (!metaKeyPressed) {\n                this.selection.length = 0;\n            }\n            this.selection.push(item);\n        }\n        this.explorerService.selectNodes(this.selection);\n    }\n\n    open(event: MouseEvent, item: INode) {\n        const metaKeyPressed = event.metaKey || event.ctrlKey || event.shiftKey;\n        if (!metaKeyPressed) {\n            this.explorerService.openNode(item.id);\n        }\n    }\n\n    isSelected(item: INode) {\n        return this.selection.indexOf(item) !== -1;\n    }\n\n    emptySpaceClick(): void {\n        this.explorerService.selectNodes([]);\n    }\n\n    ngOnDestroy() {\n        this.subs.unsubscribe();\n    }\n\n}\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FILTER_STRING } from '../../injection-tokens/tokens';\nimport { ExplorerService } from '../../services/explorer.service';\nimport { HelperService } from '../../services/helper.service';\nimport { BaseView } from '../base-view/base-view.directive';\n\n@Component({\n    selector: 'nxe-icons',\n    templateUrl: './icons.component.html',\n    styleUrls: ['./icons.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class IconsComponent extends BaseView {\n\n    public readonly icons = {\n        node: 'nxe-folder',\n        leaf: 'nxe-doc',\n    };\n\n    constructor(explorerService: ExplorerService, helperService: HelperService, @Inject(FILTER_STRING) filter: BehaviorSubject<string>) {\n        super(explorerService, helperService, filter);\n    }\n\n}\n","import { Component, Inject, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { AvialableView } from '../../shared/types';\nimport { CURRENT_VIEW } from '../../injection-tokens/tokens';\n\n@Component({\n    selector: 'nxe-explorer',\n    templateUrl: './explorer.component.html',\n    styleUrls: ['./explorer.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ExplorerComponent implements OnDestroy {\n\n    public avialableView = AvialableView;\n    public view: string;\n    private sub = new Subscription();\n\n    constructor(@Inject(CURRENT_VIEW) private currentView: BehaviorSubject<AvialableView>) {\n        this.sub.add(this.currentView.subscribe(view => {\n            this.view = view;\n        }));\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n}\n","import { Component, ElementRef, OnDestroy, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { INode } from '../../shared/types';\nimport { ExplorerService } from '../../services/explorer.service';\nimport { HelperService } from '../../services/helper.service';\n\n@Component({\n    selector: 'nxe-menu-bar',\n    templateUrl: './menu-bar.component.html',\n    styleUrls: ['./menu-bar.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MenuBarComponent implements OnDestroy {\n    @ViewChild('uploader', { static: true }) uploader: ElementRef;\n\n    canDownload = false;\n    canDelete = false;\n    canRename = false;\n\n    private sub = new Subscription();\n    private selection: INode[] = [];\n\n    constructor(private explorerService: ExplorerService, private helperService: HelperService) {\n        this.sub.add(this.explorerService.selectedNodes.subscribe(n => {\n            this.selection = n;\n            this.canDownload = n.filter(x => x.isLeaf).length === 1;\n            this.canDelete = n.length > 0;\n            this.canRename = n.length === 1;\n        }));\n    }\n\n    createFolder() {\n        const name = prompt('Enter new folder name');\n        if (name) {\n            this.explorerService.createNode(name);\n        }\n    }\n\n    refresh() {\n        this.explorerService.refresh();\n    }\n\n    rename() {\n        if (this.selection.length === 1) {\n            const oldName = this.helperService.getName(this.selection[0].data);\n            const newName = prompt('Enter new name', oldName);\n            if (newName) {\n                this.explorerService.rename(newName);\n            }\n        }\n    }\n\n    remove() {\n        if (confirm('Are you sure you want to delete the selected files?')) {\n            this.explorerService.remove();\n        }\n    }\n\n    openUploader() {\n        this.uploader.nativeElement.click();\n    }\n\n    handleFiles(files: File[]) {\n        this.explorerService.upload(files);\n        this.uploader.nativeElement.value = '';\n    }\n\n    download() {\n        this.explorerService.download();\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n}\n","import { NgeExplorerConfig } from '../shared/types';\n\nexport class ConfigProvider {\n  constructor(public config: NgeExplorerConfig) {}\n}\n","import { Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { INode } from '../../shared/types';\nimport { ExplorerService } from '../../services/explorer.service';\nimport { HelperService } from '../../services/helper.service';\nimport { ConfigProvider } from '../../services/config.provider';\n\ninterface Breadcrumb {\n    node: INode;\n    name: string;\n}\n\n@Component({\n    selector: 'nxe-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class BreadcrumbsComponent implements OnDestroy {\n    public breadcrumbs: Breadcrumb[] = [];\n    private sub = new Subscription();\n\n    constructor(private explorerService: ExplorerService, private helperService: HelperService, private config: ConfigProvider) {\n        this.sub.add(this.explorerService.breadcrumbs.subscribe(n => this.buildBreadcrumbs(n)));\n    }\n\n    private buildBreadcrumbs(nodes: INode[]) {\n        this.breadcrumbs = nodes.map(n => ({ name: this.helperService.getName(n.data) || this.config.config.homeNodeName, node: n }));\n    }\n\n    public click(crumb: Breadcrumb) {\n        this.explorerService.openNode(crumb.node.id);\n    }\n\n    public ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n}\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FILTER_STRING } from '../../injection-tokens/tokens';\nimport { ExplorerService } from '../../services/explorer.service';\nimport { HelperService } from '../../services/helper.service';\nimport { BaseView } from '../base-view/base-view.directive';\n\n@Component({\n  selector: 'nxe-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ListComponent extends BaseView {\n\n  public readonly icons = {\n    node: 'nxe-folder',\n    leaf: 'nxe-doc',\n  };\n\n  constructor(explorerService: ExplorerService, helperService: HelperService, @Inject(FILTER_STRING) filter: BehaviorSubject<string>) {\n    super(explorerService, helperService, filter);\n  }\n\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nxe-second-menu-bar',\n  templateUrl: './second-menu-bar.component.html',\n  styleUrls: ['./second-menu-bar.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SecondMenuBarComponent {\n}\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AvialableView } from '../../shared/types';\nimport { CURRENT_VIEW } from '../../injection-tokens/tokens';\n\n@Component({\n  selector: 'nxe-view-switcher',\n  templateUrl: './view-switcher.component.html',\n  styleUrls: ['./view-switcher.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ViewSwitcherComponent {\n\n  public readonly avialableView = AvialableView;\n\n  constructor(@Inject(CURRENT_VIEW) private currentView: BehaviorSubject<AvialableView>) {\n  }\n\n  setView(view: AvialableView) {\n    this.currentView.next(view);\n  }\n\n}\n","import { Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { ExplorerService } from '../../services/explorer.service';\nimport { filter } from 'rxjs/operators';\nimport { HelperService } from '../../services/helper.service';\nimport { Subscription } from 'rxjs';\nimport { INode } from '../../shared/types';\n\ninterface TreeNode extends INode {\n    children: TreeNode[];\n    expanded: boolean;\n}\n\n@Component({\n    selector: 'nxe-tree',\n    templateUrl: './tree.component.html',\n    styleUrls: ['./tree.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TreeComponent implements OnDestroy {\n    public treeNodes: TreeNode[] = [];\n    private expandedIds: number[] = [];\n    private sub = new Subscription();\n\n    constructor(private explorerService: ExplorerService, private helperService: HelperService) {\n        this.sub.add(this.explorerService.tree.pipe(filter(x => !!x)).subscribe(node => {\n            this.addExpandedNode(node.id); // always expand root\n            this.treeNodes = this.buildTree(node).children;\n        }));\n    }\n\n    open(node: INode) {\n        this.addExpandedNode(node.id);\n        this.explorerService.openNode(node.id);\n    }\n\n    expand(node: INode) {\n        this.addExpandedNode(node.id);\n        this.explorerService.expandNode(node.id);\n    }\n\n    collapse(node: INode) {\n        this.removeExpandedNode(node.id);\n        let nodes: INode;\n        this.sub.add(this.explorerService.tree.pipe(filter(x => !!x)).subscribe(x => nodes = x));\n        this.treeNodes = this.buildTree(nodes).children;\n    }\n\n    getName(node: INode) {\n        return this.helperService.getName(node);\n    }\n\n    ngOnDestroy(): void {\n        this.sub.unsubscribe();\n    }\n\n    private buildTree(node: INode): TreeNode {\n        const treeNode = {\n            id: node.id,\n            parentId: node.parentId,\n            data: node.data,\n            isLeaf: node.isLeaf,\n            children: [],\n            expanded: false\n        } as TreeNode;\n\n        treeNode.expanded = this.expandedIds.indexOf(node.id) > -1;\n        if (treeNode.expanded) {\n            treeNode.children = node.children.filter(x => !x.isLeaf).map(x => this.buildTree(x));\n        }\n        return treeNode;\n    }\n\n    private addExpandedNode(id: number) {\n        const index = this.expandedIds.indexOf(id);\n        if (index === -1) {\n            this.expandedIds.push(id);\n        }\n    }\n\n    private removeExpandedNode(id: number) {\n        const index = this.expandedIds.indexOf(id);\n        this.expandedIds.splice(index, 1);\n    }\n\n}\n","import { Component, ElementRef, Inject, OnDestroy, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { FILTER_STRING } from '../../injection-tokens/tokens';\nimport { ExplorerService } from '../../services/explorer.service';\n\n@Component({\n  selector: 'nxe-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnDestroy {\n  @ViewChild('input') input: ElementRef<HTMLInputElement>;\n\n  private sub = new Subscription();\n\n  constructor(@Inject(FILTER_STRING) private filter: BehaviorSubject<string>, explorerService: ExplorerService) {\n    this.sub.add(explorerService.tree.subscribe(() => {\n      this.clear();\n    }));\n  }\n\n  onChange(e: KeyboardEvent, value: string) {\n    if (e.key === 'Escape') {\n      this.input.nativeElement.value = '';\n      this.filter.next('');\n      return;\n    }\n    this.filter.next(value.trim());\n  }\n\n  clear() {\n    if (!this.input) { return; }\n    this.input.nativeElement.value = '';\n    this.filter.next('');\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\nimport { ExplorerService } from '../services/explorer.service';\n\n@Directive({\n  selector: '[nxeDragDrop]'\n})\nexport class DragDropDirective {\n  @Output() dragEnter = new EventEmitter<any>();\n  @Output() dragOver = new EventEmitter<any>();\n  @Output() dragLeave = new EventEmitter<any>();\n  @Output() dragDrop = new EventEmitter<any>();\n  @Output() dragging = new EventEmitter<boolean>();\n\n  constructor(private explorerService: ExplorerService) { }\n\n  @HostListener('dragenter', ['$event'])\n  public onDragEnter(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.dragEnter.emit(event);\n    this.dragging.emit(true);\n\n  }\n\n  @HostListener('dragover', ['$event'])\n  public onDragOver(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.dragOver.emit(event);\n    this.dragging.emit(true);\n  }\n\n  @HostListener('dragleave', ['$event'])\n  public onDragLeave(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.dragLeave.emit(event);\n    this.dragging.emit(false);\n  }\n\n  @HostListener('drop', ['$event'])\n  public onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      this.explorerService.upload(files);\n      this.dragDrop.emit(files);\n    }\n    this.dragging.emit(false);\n  }\n\n}\n","import { NgeExplorerConfig } from './types';\n\nexport const Config: NgeExplorerConfig = {\n    homeNodeName: 'Files'\n};\n","import { NgModule } from '@angular/core';\nimport { IconsComponent } from './components/icons/icons.component';\nimport { CommonModule } from '@angular/common';\nimport { ExplorerComponent } from './components/explorer/explorer.component';\nimport { MenuBarComponent } from './components/menu-bar/menu-bar.component';\nimport { BreadcrumbsComponent } from './components/breadcrumbs/breadcrumbs.component';\nimport { ListComponent } from './components/list/list.component';\nimport { SecondMenuBarComponent } from './components/second-menu-bar/second-menu-bar.component';\nimport { ViewSwitcherComponent } from './components/view-switcher/view-switcher.component';\nimport { TreeComponent } from './components/tree/tree.component';\nimport { FilterComponent } from './components/filter/filter.component';\nimport { DragDropDirective } from './directives/drag-drop.directive';\nimport { Config } from './shared/default-config';\n\n@NgModule({\n  declarations: [\n    IconsComponent,\n    ExplorerComponent,\n    MenuBarComponent,\n    BreadcrumbsComponent,\n    ListComponent,\n    SecondMenuBarComponent,\n    ViewSwitcherComponent,\n    TreeComponent,\n    FilterComponent,\n    DragDropDirective,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IconsComponent,\n    ExplorerComponent,\n    MenuBarComponent,\n    BreadcrumbsComponent,\n    ListComponent,\n    SecondMenuBarComponent,\n    ViewSwitcherComponent,\n    TreeComponent,\n    FilterComponent\n  ],\n  providers: [\n    {\n      provide: Config,\n      useValue: Config\n    }\n  ]\n})\nexport class NgxExplorerModule { }\n","/*\n * Public API Surface of ngx-explorer\n */\n\nexport * from './lib/shared/types';\nexport * from './lib/ngx-explorer.module';\nexport * from './lib/services/data.service';\nexport * from './lib/services/explorer.service';\nexport * from './lib/services/helper.service';\nexport * from './lib/services/config.provider';\nexport * from './lib/injection-tokens/tokens';\nexport * from './lib/components/icons/icons.component';\nexport * from './lib/components/explorer/explorer.component';\nexport * from './lib/components/menu-bar/menu-bar.component';\nexport * from './lib/components/breadcrumbs/breadcrumbs.component';\nexport * from './lib/components/base-view/base-view.directive';\nexport * from './lib/components/second-menu-bar/second-menu-bar.component';\nexport * from './lib/components/view-switcher/view-switcher.component';\nexport * from './lib/components/icons/icons.component';\nexport * from './lib/components/tree/tree.component';\nexport * from './lib/components/list/list.component';\nexport * from './lib/components/filter/filter.component';\nexport * from './lib/shared/utils';\nexport * from './lib/shared/default-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DragDropDirective as ɵa} from './lib/directives/drag-drop.directive';"],"names":[],"mappings":";;;;;IA+BY;AAAZ,WAAY,aAAa;IACrB,8BAAa,CAAA;IACb,8BAAa,CAAA;AACjB,CAAC,EAHW,aAAa,KAAb,aAAa;;MC3BZ,YAAY,GAAG,IAAI,cAAc,CAAiC,cAAc,EAAE;IAC3F,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,MAAM,IAAI,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC;CACzD,EAAE;MAEU,aAAa,GAAG,IAAI,cAAc,CAA0B,eAAe,EAAE;IACtF,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,MAAM,IAAI,eAAe,CAAC,EAAE,CAAC;CACzC;;MCVY,KAAK;IAId,OAAO,UAAU,CAAC,QAAQ,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE,IAAU;QACtD,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC;QACrB,OAAO;YACH,EAAE;YACF,QAAQ;YACR,IAAI;YACJ,MAAM;YACN,QAAQ,EAAE,EAAE;SACf,CAAC;KACL;IAED,OAAO,gBAAgB,CAAC,YAA+B,EAAE,IAAW;QAChE,MAAM,MAAM,GAAG,EAAa,CAAC;QAC7B,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,OAAO,IAAI,EAAE;YACT,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC5B,IAAI,WAAW,CAAC,QAAQ,EAAE;gBACtB,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;aACpD;iBAAM;gBACH,MAAM;aACT;SACJ;QACD,OAAO,MAAM,CAAC;KACjB;IAED,OAAO,cAAc,CAAC,CAAM,EAAE,CAAM;QAChC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAClD;;AA7Bc,QAAE,GAAG,CAAC;;MCEH,WAAW;;;;YAHhC,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;MCKY,eAAe;IAcxB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAbpC,iBAAY,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;QAClC,iBAAY,GAAsB,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEvE,mBAAc,GAAG,IAAI,eAAe,CAAU,EAAE,CAAC,CAAC;QAClD,gBAAW,GAAG,IAAI,eAAe,CAAQ,SAAS,CAAC,CAAC;QACpD,iBAAY,GAAG,IAAI,eAAe,CAAU,EAAE,CAAC,CAAC;QAChD,UAAK,GAAG,IAAI,eAAe,CAAQ,IAAI,CAAC,YAAY,CAAC,CAAC;QAEvD,kBAAa,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QACnD,eAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAC7C,gBAAW,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAC/C,SAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;QAG7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;KACvC;IAEM,WAAW,CAAC,KAAc;QAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnC;IAEM,QAAQ,CAAC,EAAU;QACtB,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9B,MAAM,WAAW,GAAG,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;YACtE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAChC,CAAC,CAAC;KACN;IAEM,UAAU,CAAC,EAAU;QACxB,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;KACxC;IAEM,UAAU,CAAC,IAAY;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC;YACrD,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB,CAAC,CAAC;KACN;IAEM,OAAO;QACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;KAC5C;IAEM,MAAM,CAAC,IAAY;QACtB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QACxC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC9D;QACD,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;SACjD;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC;gBACnD,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC;gBACnD,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB,CAAC,CAAC;SACN;KACJ;IAEM,MAAM;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QAC5C,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;SACjD;QAED,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAClE,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACpE,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAEnE,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACzE,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAEzE,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB,CAAC,CAAC;KACN;IAEM,MAAM,CAAC,KAAa;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC;YACrD,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB,CAAC,CAAC;KACN;IAEM,QAAQ;QACX,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;YAC7C,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB,CAAC,CAAC;KACN;IAEO,eAAe,CAAC,EAAU;QAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QACrC,IAAI,MAAM,CAAC,MAAM,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;SAC5C;QAED,OAAO,IAAI,CAAC,WAAW;aAClB,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC;aAC5B,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAoB;YACzC,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;YACtE,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YACrE,MAAM,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC9C,MAAM,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxG,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE1G,OAAO,CAAC,OAAO,CAAC,CAAC;gBACb,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;gBAC5D,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACjC,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAClC,CAAC,CAAC;YAEH,KAAK,CAAC,OAAO,CAAC,CAAC;gBACX,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aAC/B,CAAC,CAAC;YAEH,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACvE,MAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC5D,MAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;YAC3D,MAAM,CAAC,QAAQ,GAAG,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAEpD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACtC,CAAC,CAAC,CAAC;KACX;;;;YAxIJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;YAJQ,WAAW;;;MCCP,aAAa;IAEtB,OAAO,CAAC,IAAS;QACb,OAAO,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;KACrB;;;;YAPJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;MCGY,QAAQ;IAMjB,YAAsB,eAAgC,EAAY,aAA4B,EAAiC,MAA+B;QAAxI,oBAAe,GAAf,eAAe,CAAiB;QAAY,kBAAa,GAAb,aAAa,CAAe;QAAiC,WAAM,GAAN,MAAM,CAAyB;QALvJ,cAAS,GAAY,EAAE,CAAC;QACxB,UAAK,GAAY,EAAE,CAAC;QACpB,aAAQ,GAAG,KAAK,CAAC;QACd,SAAI,GAAG,IAAI,YAAY,EAAE,CAAC;QAGhC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK;YACzD,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;SAC5C,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK;YAC5D,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;SACvC,CAAC,CAAC,CAAC;KACP;IAED,IAAI,aAAa;QACb,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;KAClH;IAED,cAAc,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC3C;IAED,MAAM,CAAC,KAAiB,EAAE,IAAW;QACjC,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChE,MAAM,eAAe,GAAG,aAAa,KAAK,CAAC,CAAC,CAAC;QAC7C,MAAM,cAAc,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC;QAExE,IAAI,eAAe,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;SAC3C;aAAM;YACH,IAAI,CAAC,cAAc,EAAE;gBACjB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;aAC7B;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B;QACD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpD;IAED,IAAI,CAAC,KAAiB,EAAE,IAAW;QAC/B,MAAM,cAAc,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC;QACxE,IAAI,CAAC,cAAc,EAAE;YACjB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC1C;KACJ;IAED,UAAU,CAAC,IAAW;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;KAC9C;IAED,eAAe;QACX,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;KACxC;IAED,WAAW;QACP,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;KAC3B;;;YA9DJ,SAAS;;;YAHD,eAAe;YACf,aAAa;YAJb,eAAe,uBAa6E,MAAM,SAAC,aAAa;;;MCD5G,cAAe,SAAQ,QAAQ;IAOxC,YAAY,eAAgC,EAAE,aAA4B,EAAyB,MAA+B;QAC9H,KAAK,CAAC,eAAe,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;QANlC,UAAK,GAAG;YACpB,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,SAAS;SAClB,CAAC;KAID;;;YAfJ,SAAS,SAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,81BAAqC;gBAErC,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACxC;;;YATQ,eAAe;YACf,aAAa;YAHb,eAAe,uBAmByD,MAAM,SAAC,aAAa;;;MCTxF,iBAAiB;IAM1B,YAA0C,WAA2C;QAA3C,gBAAW,GAAX,WAAW,CAAgC;QAJ9E,kBAAa,GAAG,aAAa,CAAC;QAE7B,QAAG,GAAG,IAAI,YAAY,EAAE,CAAC;QAG7B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI;YACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACpB,CAAC,CAAC,CAAC;KACP;IAED,WAAW;QACP,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;KAC1B;;;YApBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,y2BAAwC;gBAExC,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACxC;;;YATQ,eAAe,uBAgBP,MAAM,SAAC,YAAY;;;MCLvB,gBAAgB;IAUzB,YAAoB,eAAgC,EAAU,aAA4B;QAAtE,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAP1F,gBAAW,GAAG,KAAK,CAAC;QACpB,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAEV,QAAG,GAAG,IAAI,YAAY,EAAE,CAAC;QACzB,cAAS,GAAY,EAAE,CAAC;QAG5B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;SACnC,CAAC,CAAC,CAAC;KACP;IAED,YAAY;QACR,MAAM,IAAI,GAAG,MAAM,CAAC,uBAAuB,CAAC,CAAC;QAC7C,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACzC;KACJ;IAED,OAAO;QACH,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;KAClC;IAED,MAAM;QACF,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACnE,MAAM,OAAO,GAAG,MAAM,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;YAClD,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACxC;SACJ;KACJ;IAED,MAAM;QACF,IAAI,OAAO,CAAC,qDAAqD,CAAC,EAAE;YAChE,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;SACjC;KACJ;IAED,YAAY;QACR,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACvC;IAED,WAAW,CAAC,KAAa;QACrB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;KAC1C;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;KACnC;IAED,WAAW;QACP,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;KAC1B;;;YAnEJ,SAAS,SAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,6sCAAwC;gBAExC,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACxC;;;YARQ,eAAe;YACf,aAAa;;;uBASjB,SAAS,SAAC,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;MCX9B,cAAc;IACzB,YAAmB,MAAyB;QAAzB,WAAM,GAAN,MAAM,CAAmB;KAAI;;;MCerC,oBAAoB;IAI7B,YAAoB,eAAgC,EAAU,aAA4B,EAAU,MAAsB;QAAtG,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAgB;QAHnH,gBAAW,GAAiB,EAAE,CAAC;QAC9B,QAAG,GAAG,IAAI,YAAY,EAAE,CAAC;QAG7B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3F;IAEO,gBAAgB,CAAC,KAAc;QACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACjI;IAEM,KAAK,CAAC,KAAiB;QAC1B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAChD;IAEM,WAAW;QACd,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;KAC1B;;;YAxBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,0XAA2C;gBAE3C,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACxC;;;YAdQ,eAAe;YACf,aAAa;YACb,cAAc;;;MCQV,aAAc,SAAQ,QAAQ;IAOzC,YAAY,eAAgC,EAAE,aAA4B,EAAyB,MAA+B;QAChI,KAAK,CAAC,eAAe,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;QANhC,UAAK,GAAG;YACtB,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,SAAS;SAChB,CAAC;KAID;;;YAfF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,i5CAAoC;gBAEpC,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACtC;;;YATQ,eAAe;YACf,aAAa;YAHb,eAAe,uBAmBuD,MAAM,SAAC,aAAa;;;MCZtF,sBAAsB;;;YANlC,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,4PAA+C;gBAE/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACtC;;;MCIY,qBAAqB;IAIhC,YAA0C,WAA2C;QAA3C,gBAAW,GAAX,WAAW,CAAgC;QAFrE,kBAAa,GAAG,aAAa,CAAC;KAG7C;IAED,OAAO,CAAC,IAAmB;QACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7B;;;YAfF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,qRAA6C;gBAE7C,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACtC;;;YATQ,eAAe,uBAcT,MAAM,SAAC,YAAY;;;MCGrB,aAAa;IAKtB,YAAoB,eAAgC,EAAU,aAA4B;QAAtE,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAJnF,cAAS,GAAe,EAAE,CAAC;QAC1B,gBAAW,GAAa,EAAE,CAAC;QAC3B,QAAG,GAAG,IAAI,YAAY,EAAE,CAAC;QAG7B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI;YACxE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;SAClD,CAAC,CAAC,CAAC;KACP;IAED,IAAI,CAAC,IAAW;QACZ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC1C;IAED,MAAM,CAAC,IAAW;QACd,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC5C;IAED,QAAQ,CAAC,IAAW;QAChB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjC,IAAI,KAAY,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QACzF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;KACnD;IAED,OAAO,CAAC,IAAW;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC3C;IAED,WAAW;QACP,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;KAC1B;IAEO,SAAS,CAAC,IAAW;QACzB,MAAM,QAAQ,GAAG;YACb,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,KAAK;SACN,CAAC;QAEd,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3D,IAAI,QAAQ,CAAC,QAAQ,EAAE;YACnB,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SACxF;QACD,OAAO,QAAQ,CAAC;KACnB;IAEO,eAAe,CAAC,EAAU;QAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3C,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC7B;KACJ;IAEO,kBAAkB,CAAC,EAAU;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACrC;;;YAtEJ,SAAS,SAAC;gBACP,QAAQ,EAAE,UAAU;gBACpB,goCAAoC;gBAEpC,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACxC;;;YAhBQ,eAAe;YAEf,aAAa;;;MCOT,eAAe;IAK1B,YAA2C,MAA+B,EAAE,eAAgC;QAAjE,WAAM,GAAN,MAAM,CAAyB;QAFlE,QAAG,GAAG,IAAI,YAAY,EAAE,CAAC;QAG/B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC;YAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;SACd,CAAC,CAAC,CAAC;KACL;IAED,QAAQ,CAAC,CAAgB,EAAE,KAAa;QACtC,IAAI,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrB,OAAO;SACR;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;KAChC;IAED,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO;SAAE;QAC5B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACtB;IAED,WAAW;QACT,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;KACxB;;;YAjCF,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,6QAAsC;;aAEvC;;;YARQ,eAAe,uBAcT,MAAM,SAAC,aAAa;YAZ1B,eAAe;;;oBAQrB,SAAS,SAAC,OAAO;;;MCLP,iBAAiB;IAO5B,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAN1C,cAAS,GAAG,IAAI,YAAY,EAAO,CAAC;QACpC,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;QACnC,cAAS,GAAG,IAAI,YAAY,EAAO,CAAC;QACpC,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;QACnC,aAAQ,GAAG,IAAI,YAAY,EAAW,CAAC;KAEQ;IAGlD,WAAW,CAAC,KAAK;QACtB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAE1B;IAGM,UAAU,CAAC,KAAK;QACrB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;IAGM,WAAW,CAAC,KAAK;QACtB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;IAGM,MAAM,CAAC,KAAK;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,MAAM,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC;QACvC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC3B;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;;;YA/CF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;aAC1B;;;YAJQ,eAAe;;;wBAMrB,MAAM;uBACN,MAAM;wBACN,MAAM;uBACN,MAAM;uBACN,MAAM;0BAIN,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;yBASpC,YAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;0BAQnC,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;qBAQpC,YAAY,SAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;;;MCtCrB,MAAM,GAAsB;IACrC,YAAY,EAAE,OAAO;;;WCyCT;MAIH,iBAAiB;;;YAlC7B,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,cAAc;oBACd,iBAAiB;oBACjB,gBAAgB;oBAChB,oBAAoB;oBACpB,aAAa;oBACb,sBAAsB;oBACtB,qBAAqB;oBACrB,aAAa;oBACb,eAAe;oBACf,iBAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,OAAO,EAAE;oBACP,cAAc;oBACd,iBAAiB;oBACjB,gBAAgB;oBAChB,oBAAoB;oBACpB,aAAa;oBACb,sBAAsB;oBACtB,qBAAqB;oBACrB,aAAa;oBACb,eAAe;iBAChB;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,MAAM;wBACf,QAAQ,IAAQ;qBACjB;iBACF;aACF;;;AC/CD;;;;ACAA;;;;;;"}